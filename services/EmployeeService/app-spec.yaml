---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: employee-web-api
  name: deployment-employee-web-api
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-employee-web-api
  replicas: 2
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-employee-web-api
    spec:
      serviceAccountName: employee-web-api-controller
      containers:
      - image: 163487917873.dkr.ecr.us-east-1.amazonaws.com/peoplesuite:employee
        imagePullPolicy: Always
        name: app-employee-web-api
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: employee-web-api
  name: service-employee-web-api
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-employee-web-api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: employee-web-api
  name: ingress-employee-web-api
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
        - path: /peoplesuite/apis/employees
          pathType: Prefix
          backend:
            service:
              name: service-employee-web-api
              port:
                number: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: employee-web-api-logging
  namespace: employee-web-api
data:
  flb_log_cw: "false"  # Set to true to ship Fluent Bit process logs to CloudWatch.
  filters.conf: |
    [FILTER]
        Name parser
        Match *
        Key_name log
        Parser crio
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
        Buffer_Size 0
        Kube_Meta_Cache_TTL 300s
  output.conf: |
    [OUTPUT]
        Name cloudwatch_logs
        Match   kube.*
        region us-east-1
        log_group_name my-logs
        log_stream_prefix from-fluent-bit-
        log_retention_days 60
        auto_create_group true
  parsers.conf: |
    [PARSER]
        Name crio
        Format Regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>P|F) (?<log>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z